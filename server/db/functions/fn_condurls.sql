\c seo;

CREATE OR REPLACE FUNCTION CONDURL_INSERT_IGNORE(
    vCONDITION_ID INTEGER,
    vURL_ID INTEGER
) RETURNS INTEGER AS $$
    DECLARE vCONDURL_ID INTEGER;
    BEGIN

        IF vCONDITION_ID IS NULL OR NOT EXISTS (SELECT 1 FROM conditions WHERE CONDITION_ID = vCONDITION_ID) THEN
            RAISE EXCEPTION 'CONDURL_INSERT_IGNORE: vCONDITION_ID is incorrect!';
        END IF;
        IF vURL_ID IS NULL OR NOT EXISTS (SELECT 1 FROM urls WHERE URL_ID = vURL_ID) THEN
            RAISE EXCEPTION 'CONDURL_INSERT_IGNORE: vURL_ID is incorrect!';
        END IF;

        SELECT
                CONDURL_ID INTO vCONDURL_ID
            FROM
                condurls
            WHERE
                CONDITION_ID = vCONDITION_ID
                AND URL_ID = vURL_ID;

        IF vCONDURL_ID IS NULL THEN

           INSERT INTO condurls (CONDITION_ID, URL_ID, DATE_CREATE) VALUES
                (vCONDITION_ID, vURL_ID, NOW())
                RETURNING CONDURL_ID INTO vCONDURL_ID;

        END IF;

        RETURN vCONDURL_ID;

    END;
$$ LANGUAGE plpgsql;

CREATE OR REPLACE FUNCTION USCONDURL_INSERT_IGNORE(
    vCONDURL_ID INTEGER,
    vUSER_ID INTEGER
) RETURNS INTEGER AS $$
    DECLARE vUSCONDURL_ID INTEGER;
    BEGIN

        IF vCONDURL_ID IS NULL OR NOT EXISTS (SELECT 1 FROM condurls WHERE CONDURL_ID = vCONDURL_ID) THEN
            RAISE EXCEPTION 'USCONDURL_INSERT_IGNORE: vCONDURL_ID is incorrect!';
        END IF;
        IF vUSER_ID IS NULL OR NOT EXISTS (SELECT 1 FROM users WHERE USER_ID = vUSER_ID) THEN
            RAISE EXCEPTION 'USCONDURL_INSERT_IGNORE: vUSER_ID is incorrect!';
        END IF;

        SELECT
                USCONDURL_ID INTO vUSCONDURL_ID
            FROM
                uscondurls
            WHERE
                CONDURL_ID = vCONDURL_ID
                AND USER_ID = vUSER_ID;

        IF vUSCONDURL_ID IS NULL THEN

           INSERT INTO uscondurls (CONDURL_ID, USER_ID, DATE_CREATE) VALUES
                (vCONDURL_ID, vUSER_ID, NOW())
                RETURNING USCONDURL_ID INTO vUSCONDURL_ID;

        END IF;

        RETURN vUSCONDURL_ID;

    END;
$$ LANGUAGE plpgsql;

CREATE OR REPLACE FUNCTION USCONDURL_NEW(
    vUSER_ID INTEGER,
    vURL TEXT,
    vCONDITION_QUERY TEXT,
    vSIZE_SEARCH INTEGER,
    vREGION_ID INTEGER,
    vSENGINE_ID INTEGER
) RETURNS INTEGER AS $$
    DECLARE vCONDITION_ID INTEGER;
    DECLARE vCONDURL_ID INTEGER;
    DECLARE vURL_ID INTEGER;
    BEGIN

        SELECT URL_INSERT_IGNORE(vURL) INTO vURL_ID;
        SELECT CONDITION_INSERT_IGNORE(vCONDITION_QUERY, vSIZE_SEARCH, vREGION_ID, vSENGINE_ID) INTO vCONDITION_ID;
        SELECT CONDURL_INSERT_IGNORE(vCONDITION_ID, vURL_ID) INTO vCONDURL_ID;

        RETURN USCONDURL_INSERT_IGNORE(vCONDURL_ID, vUSER_ID);


    END;
$$ LANGUAGE plpgsql;