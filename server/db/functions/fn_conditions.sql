\c seo;

/*
ОБНОВЛЕНИЕ корридора
*/

CREATE OR REPLACE FUNCTION CONDITION_LOCK(
    vCONDITION_ID integer
) RETURNS BOOLEAN AS $$
    DECLARE vCONDITION_LOCKED BOOLEAN;
    BEGIN

    SELECT CONDITION_LOCKED INTO vCONDITION_LOCKED FROM conditions WHERE CONDITION_ID = vCONDITION_ID FOR UPDATE;

    IF NOT vCONDITION_LOCKED THEN
        UPDATE conditions SET CONDITION_LOCKED = TRUE WHERE CONDITION_ID = vCONDITION_ID;
    END IF;

    RETURN NOT vCONDITION_LOCKED;

    END;
$$ LANGUAGE plpgsql;

CREATE OR REPLACE FUNCTION CONDITION_UNLOCK(
    vCONDITION_ID integer
) RETURNS void AS $$
    BEGIN

    UPDATE conditions SET CONDITION_LOCKED = FALSE WHERE CONDITION_ID = vCONDITION_ID;

    END;
$$ LANGUAGE plpgsql;

CREATE OR REPLACE FUNCTION CONDITION_CLEAR(
    vCONDITION_ID integer
) RETURNS void AS $$
    BEGIN

    DELETE FROM scontents WHERE SPAGE_ID IN (SELECT SP.SPAGE_ID FROM spages SP WHERE SP.CONDITION_ID = vCONDITION_ID);
    DELETE FROM spages WHERE CONDITION_ID = vCONDITION_ID;
    DELETE FROM urls WHERE
        NOT EXISTS (SELECT 1 FROM scontents SC WHERE SC.URL_ID = URL_ID)
        AND NOT EXISTS (SELECT 1 FROM condurls CU WHERE CU.URL_ID = URL_ID);

    END;
$$ LANGUAGE plpgsql;



CREATE OR REPLACE FUNCTION CONDITION_REPLACE(
    vCONDITION_ID integer,
    jSEARCH_RESULT JSON
) RETURNS INTEGER AS $$
    DECLARE jLINK JSON;
    DECLARE vSPAGE_ID INTEGER;
    DECLARE vSTART_FROM INTEGER DEFAULT 0;
    DECLARE vURL_ID INTEGER;
    BEGIN

        -- SELECT (jSEARCH_RESULT->>'startLinksNumber')::integer INTO vSTART_FROM;
        SELECT MAX(POSITION_N) INTO vSTART_FROM FROM scontents SC JOIN spages SP USING(SPAGE_ID) WHERE SP.CONDITION_ID = vCONDITION_ID;

        INSERT INTO spages (CONDITION_ID, PAGE_NUMBER, DATE_CREATE) VALUES
            (vCONDITION_ID, (jSEARCH_RESULT->>'pageNumber')::integer, NOW()) RETURNING SPAGE_ID INTO vSPAGE_ID;

        FOR jLINK IN SELECT * FROM json_array_elements(jSEARCH_RESULT->'links')
        LOOP
            RAISE NOTICE '%',jLINK;
            SELECT URL_INSERT_IGNORE((jLINK->>'url')::text) INTO vURL_ID;
            INSERT INTO scontents (URL_ID, SPAGE_ID, POSITION_N, DATE_CREATE)
                SELECT vURL_ID, vSPAGE_ID, COALESCE(vSTART_FROM,0) + (jLINK->>'id')::integer, NOW();

            IF (jLINK->'params'::text) is not null THEN
                PERFORM PARAMS_REPLACE(vURL_ID, vCONDITION_ID, jLINK->'params');
            END IF;

        END LOOP;

        RETURN vSPAGE_ID;

    END;
$$ LANGUAGE plpgsql;
-- SELECT CONDITION_REPLACE(1111, '{"test":"titleCS","links":[{"url":"test"},{"url":"test2"}]}');